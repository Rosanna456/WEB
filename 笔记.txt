案例目的：在艺龙网中，根据价位+城市+日期匹配了酒店


----------------------第一天--------------
1.Python 代码是怎样表达的？
2.python的变量是什么？用来干什么？怎么表达？
3.python的第三方库是什么？例如selenium这个库
4.python中第三方库的功能，如何调用？例如要使用selenium库当中的访问网页的功能


python的两个原则 ：1.对齐 2.换行（一句话就是一行）


用代码操作浏览器
selenium ：工具包（Web自动化的工具包）

1.录制工作-ide  2. 写代码-webdriver(跟代码结合使用)   3. 分布式处理-grid

python 的 webdriver ??
1.你是否具有解决问题的能力
2.你本地的python是否具备对网页操作的能力

自动化代码selenium --各种浏览器的驱动程序 xxxdriver.exe--浏览器(chrome,IE,etc...)
（驱动程序是跟浏览器的版本是匹配的）
安装python默认是没有的，
python的第三方库来解决这个问题（安装外部库，让你本地python具备相应的能力）
怎么安装?
pip命令，在线安装。 pip install
1.下载最新的版本，版本更新
2.如果你的第三方功能库有依赖库，那就自动给你安装。
3.安装到哪里了呢？


引入库：
from selenium import webdriver

打开谷歌浏览器，与浏览器建立了会话。
driver (变量) = 会话
driver = webdriver.Chrome()

要在这个会话的基础上，访问一个网站。
功能库-提供了各种网页操作的API--方法。
访问网页的方法 -- get（）
driver.get("http://www.elong.com/")

-----------------------------------------第二天-------------------------------
1）掌握xpath相对定位方式，让你的定位更灵活（为啥不用copy?）
2）掌握等待的方式和时机，让你的代码更稳定

在已建立谷歌会话的基础上，如何对特定的元素进行操作？

HTML元素---：
1.标签名（必选）--元素的类别    <标签名（<input是输入框的类别）
2.属性（可选）--（属性名=值）
3.文本内容（可选,有起始标签和结束标签，标签对）-- <标签名>文本内容</标签名>  eg:<dl>目的地</dl>

（*：按照元素的特色（特征）中提取捕捉（右击检查））

元素定位：根据元素的本身的特征来精准定位元素
八大定位之一：Xpath(相对定位）
            原则：根据元素的本身的特征来唯一识别，变动的属性不用来定位，选择具有唯一性的属性来定位。
            提供：你需要什么样特征的元素，再去写表达式
            语法：语句以上“//”开头
            *：用“copy”元素定位是不行的，它是严格按照页面的关系和位置，若页面有改动，则元素定位则失效。 eg://*[@id="domesticDiv"]/dl[1]/dd/input
            “/”：代表的是父子关系（上下级关系），单斜杠加下标代表的是已经遵从了页面的层级结构。

            "Ctrl + f" 写语句来定位元素,检查是否是唯一定位

    基本表达式：//标签名[@属性=值]         eg；//input[@data-bindid="city"]
               //标签名[text()=文本内容]  eg：//input[text()="目的地"]
  
    *：id --属性--相当于身份证--当前的html页面中是唯一的，但有的ID会每次自动变化。

    层级定位：当自身的特征无法唯一定位到自己，借助父级/祖先级。
              通过父级/祖先级，缩小查找范围。在父辈/祖先级的后辈当中，再来找自己。
    eg：//div[@id="domesticDiv"] //dt[text()="目的地"]
        第一个//相对于整个html页面去查找。
        第二个//相对于上一个//找到的元素，在它的子孙后辈当中，去查找。
    

-------------------------------第三天----------------
find_elements_by_xpath ---获取匹配到表达式的所有元素
python用来存放多个数据--列表/字典/元组/集合
列表：有顺序（从零开始 的），有索引值
列表的操作 ： 1.取值 2.添加数值 3.修改数值


1.find_elements  结果是个列表
2.列表的处理方式  --取值/创建
3.遍历列表--for循环
4.文件的读写操作
